# Problem: CF 1340 A - Nastya and Strange Generator
# https://codeforces.com/contest/1340/problem/A

"""
Problem: Nastya and Strange Generator

Algorithm:
The problem involves simulating a permutation generation process based on specific rules.
At each step i (from 1 to n), the algorithm determines where to place number i in the permutation.
For this, it computes an array r[j] representing the minimum index such that j <= r_j <= n 
and position r_j is not yet occupied. Then it counts how many times each position appears as 
a minimal valid index (count array). Among unoccupied positions with maximum count value,
it selects one position to place number i.

This implementation checks if a given permutation can be generated by such a process.
It simulates the algorithm backward by tracking the next expected number in sequence and
validating that all transitions are possible.

Time Complexity: O(n) per test case
Space Complexity: O(1) - only using a few variables, no extra data structures for large input

"""

import sys

input = sys.stdin.buffer.readline


def process(A):
    n = len(A)
    curr = None  # Current expected number to be placed
    n1 = n       # Maximum value in remaining numbers (used to determine next expected)
    orig_curr = None  # Original current value for checking condition
    for i in range(n):
        if curr is None:
            curr = A[i]      # Start with first element
            orig_curr = A[i]
        if A[i] == curr:     # If the element matches expected
            if curr == n1:   # If current equals maximum remaining number
                n1 = orig_curr - 1  # Reduce max value expected
                curr = None         # Reset for next sequence
                orig_curr = None
            else:
                curr += 1    # Increment expected number
        else:
            sys.stdout.write("No\n")  # Mismatch, not valid permutation
            return
    sys.stdout.write("Yes\n")  # All elements match expectations
    return


t = int(input())
for i in range(t):
    n = int(input())
    A = [int(x) for x in input().split()]
    process(A)


# https://github.com/VaHiX/codeForces/